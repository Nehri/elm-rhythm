Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values) return _elm.Main.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Color = Elm.Color.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Time = Elm.Time.make(_elm);
   var _op = {};
   var ampharos = Elm.Native.Port.make(_elm).inboundSignal("ampharos",
   "Main.MusicObject",
   function (v) {
      return typeof v === "object" && "amplitude" in v && "low_energy" in v && "mid_energy" in v && "high_energy" in v ? {_: {}
                                                                                                                         ,amplitude: typeof v.amplitude === "number" ? v.amplitude : _U.badPort("a number",
                                                                                                                         v.amplitude)
                                                                                                                         ,low_energy: typeof v.low_energy === "number" ? v.low_energy : _U.badPort("a number",
                                                                                                                         v.low_energy)
                                                                                                                         ,mid_energy: typeof v.mid_energy === "number" ? v.mid_energy : _U.badPort("a number",
                                                                                                                         v.mid_energy)
                                                                                                                         ,high_energy: typeof v.high_energy === "number" ? v.high_energy : _U.badPort("a number",
                                                                                                                         v.high_energy)} : _U.badPort("an object with fields `amplitude`, `low_energy`, `mid_energy`, `high_energy`",
      v);
   });
   var silentMusic = {amplitude: 0.0
                     ,low_energy: 0.0
                     ,mid_energy: 0.0
                     ,high_energy: 0.0};
   var drawCircle = F2(function (color,r) {
      return A2($Graphics$Collage.filled,
      $Color.black,
      $Graphics$Collage.circle(r));
   });
   var showShape = F2(function (color,r) {
      return A3($Graphics$Collage.collage,
      2500,
      1000,
      _U.list([A2($Graphics$Collage.move,
      {ctor: "_Tuple2",_0: 0,_1: 0},
      A2(drawCircle,color,r))]));
   });
   var main = A2($Signal.sampleOn,
   A2($Signal.map,function (a) {    return a.amplitude;},ampharos),
   A2($Signal.map,
   function (a) {
      return A2(showShape,$Color.black,a.amplitude * 700);
   },
   ampharos));
   var clock = $Time.every($Time.millisecond);
   var MusicObject = F4(function (a,b,c,d) {
      return {amplitude: a
             ,low_energy: b
             ,mid_energy: c
             ,high_energy: d};
   });
   return _elm.Main.values = {_op: _op
                             ,MusicObject: MusicObject
                             ,clock: clock
                             ,drawCircle: drawCircle
                             ,showShape: showShape
                             ,silentMusic: silentMusic
                             ,main: main};
};