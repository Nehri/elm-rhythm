Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values) return _elm.Main.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Color = Elm.Color.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $Json$Decode = Elm.Json.Decode.make(_elm),
   $Json$Encode = Elm.Json.Encode.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Time = Elm.Time.make(_elm);
   var _op = {};
   var ampharos = Elm.Native.Port.make(_elm).inboundSignal("ampharos",
   "Main.MusicObject",
   function (v) {
      return typeof v === "object" && "amplitude" in v ? {_: {}
                                                         ,amplitude: typeof v.amplitude === "number" ? v.amplitude : _U.badPort("a number",
                                                         v.amplitude)} : _U.badPort("an object with fields `amplitude`",
      v);
   });
   var objectToValue = function (sound) {
      return $Json$Encode.object(_U.list([{ctor: "_Tuple2"
                                          ,_0: "amplitude"
                                          ,_1: $Json$Encode.$float(sound.amplitude)}]));
   };
   var silentMusic = {amplitude: 0.0};
   var drawCircle = F2(function (color,r) {
      return A2($Graphics$Collage.filled,
      $Color.black,
      $Graphics$Collage.circle(r));
   });
   var showShape = F2(function (color,r) {
      return A3($Graphics$Collage.collage,
      1000,
      1000,
      _U.list([A2($Graphics$Collage.move,
      {ctor: "_Tuple2",_0: 500,_1: 0},
      A2(drawCircle,color,r))]));
   });
   var main = A2($Signal.sampleOn,
   A2($Signal.map,function (a) {    return a.amplitude;},ampharos),
   A2($Signal.map,
   function (a) {
      return A2(showShape,$Color.black,a.amplitude * 500);
   },
   ampharos));
   var clock = $Time.every($Time.millisecond);
   var MusicObject = function (a) {    return {amplitude: a};};
   var floatToObject = function () {
      var soundDecoder = A2($Json$Decode.object1,
      MusicObject,
      A2($Json$Decode._op[":="],"amplitude",$Json$Decode.$float));
      return A2($Json$Decode.customDecoder,
      soundDecoder,
      function (sound) {
         return $Result.Ok(_U.update(silentMusic,
         {amplitude: sound.amplitude}));
      });
   }();
   return _elm.Main.values = {_op: _op
                             ,MusicObject: MusicObject
                             ,clock: clock
                             ,drawCircle: drawCircle
                             ,showShape: showShape
                             ,silentMusic: silentMusic
                             ,objectToValue: objectToValue
                             ,floatToObject: floatToObject
                             ,main: main};
};